 1 - Who is credited with getting the JSON movement started?

 Answer: Douglas Crockford
 // And is has two amazing books about JavaScript 'JavaScript: The Good Parts'
 // and 'How JavaScript Works'



 2 - Who is credited with the REST approach to web services?

 Answer: Roy Fielding
 // You also must read about is 'Apache HTTP-Server'.




 3 - What Python library do you have to import to parse and handle JSON?

 Answer: import json
 // Has a simple convention, the library's to work with external formats will be have 
 // the name of the format itself




 4 - Which of the following is true about an API?

 Answer: An API is a contract that defines how to use a software library
// Remember that in order that differents programs talk to each other the need 
// to have rules of what kind of information they going to pass and how.
 
 

 5 - What is the method used to parse a string containing JSON 
 data so that you can work with the data in Python?

 Answer: json.loads()
 // Why not json.parse()???
 // Well, has variables, methods and functions can have any 
 // name always has you not use reserved words.  

 
 

 6 - Which of the following is a web services approach used by the Twitter API?

 Answer: REST
// This is a topic for a course by itself, but think that this is another convention 
// that allows to us, to use the web in a very efficient way.



 7 - What kind of variable will you get in Python when the following JSON is parsed:

	[ "Glenn", "Sally", "Jen" ]

 Answer: A list with three items
 // This is pure logic. Cannot be a Tuple because this is inmutable. 
 // For a dictionary must need to have a pair value like "Chuck":"Severance" 
 // ('key':'value'), this is  not the case.
 // Finally, list are the logical option, this a well tou will store all the 
 // data in one variable.



 8 - What kind of variable will you get in Python when the following JSON is parsed:

{ "id" : "001",
  "x" : "2",
  "name" : "Chuck"
}

 Answer: A dictionary with three key / value pairs
 // Check the explanation above.



 9 - Which of the following is not true about the service-oriented approach?

 Answer: An application runs together all in one place
 // Well, is this were the case, internet cannot be possible.
 // Think in this way, you have you computer/tablet/cellphone, you accesing a 
 // web service, these need a API that can be in a place 'X', like Google search engine
 // a then they connect you device to a server in place 'Y', and it is possible
 // that they keep talking each other as long you are using the service.

 
 

 10 - If the following JSON were parsed and put into the variable x,

	{
	    "users": [
		{
		    "status": {
		        "text": "@jazzychad I just bought one .__.",
		     },
		     "location": "San Francisco, California",
		     "screen_name": "leahculver",
		     "name": "Leah Culver",
		 },
	   ...
what Python code would extract "Leah Culver" from the JSON?

 Answer: x["users"][0]["name"]
// This can be confusing, but the fir data in "user" is the brackets ([]), 
// an can be any number of then, so in order to access "Leah Culver" you need 
// first to enter inside the brackets




 11 - Which of these two web service approaches is preferred in most modern service-oriented applications?

 Answer: REST - Representational state transfer
 // You can see a lot of free courses of API Rest in Youtube.




 12 - What library call do you make to append properly encoded parameters to the end of a URL like the following:

	http://maps.googleapis.com/maps/api/geocode/json?sensor=false&address=Ann+Arbor%2C+MI


 Answer: urllib.parse.urlencode()

 
 

 14 - What happens when you exceed the Google geocoding API rate limit?

 Answer: You cannot use the API for 24 hours
 // This can depend from company to company, but in general
 // is a standard limitation for free use of a API
 
 
 

 15 - What protocol does Twitter use to protect its API?

 Answer: OAuth
 // Check more in their page




 16 - What header does Twitter use to tell you how many more API 
 requests you can make before you will be rate limited?

 Answer: x-rate-limit-remaining
// I think that limit-remaining is self explanatory



